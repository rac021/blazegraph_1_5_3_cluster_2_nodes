#
# This file contains a list of URLs of interest when doing a post-mortem
# investigation.  The file is basically a list of URLs which could be used
# to demand the corresponding counters from the httpd service.  It can be
# submitted to a Java class that will extract the necessary performance
# counters from a directory containing counter set XML files.  This is done
# relatively efficiently - in a single pass over the XML files.
#
# In addition to the normal URL, you will typically want to specify the
# "file=" URL query parameter to name the output file.  You can also specify
# the desired MIME type using the "-mimeType=" URL query parameter.

##
# Throughput (triples per second and toldTriples) for the RDF bulk distributed data load)
##
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(toldTriplesRestartSafePerSec)&depth=7&correlated=true&period=Minutes&file=service/cs/toldTriplesRestartSafePerSec
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(toldTriplesRestartSafeCount)&depth=8&correlated=true&file=service/cs/toldTriplesRestartSafeCount

http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(fullTextTupleWriteCount)&depth=8&correlated=true&file=service/cs/fullTextTupleWriteCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(toldTriplesWriteCount)&depth=8&correlated=true&file=service/cs/toldTriplesWriteCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(documentTIDsWaitingCount)&depth=8&correlated=true&file=service/cs/documentTIDsWaitingCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(documentTIDsReadyCount)&depth=8&correlated=true&file=service/cs/documentTIDsReadyCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(documentErrorCount)&depth=8&correlated=true&file=service/cs/documentErrorCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(documentRestartSafeCount)&depth=8&correlated=true&file=service/cs/documentRestartSafeCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/(documentsParsedCount)&depth=8&correlated=true&file=service/cs/documentsParsedCount

# counters related to pausing the parser pool
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/pause/(outstandingStatementCount)&depth=8&correlated=true&file=service/cs/pause/outstandingStatementCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/pause/(unbufferedStatementCount)&depth=8&correlated=true&file=service/cs/pause/unbufferedStatementCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/pause/(pausedThreadCount)&depth=8&correlated=true&file=service/cs/pause/pausedThreadCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/pause/(poolPausedCount)&depth=8&correlated=true&file=service/cs/pause/poolPausedCount

# services (parser, term2Id writers, other index writers, file deletes)
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/services/parserService%2FAverage+Queue+Length&depth=8&correlated=true&file=service/cs/service/parserServiceQueueLength
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/services/parserService%2FAverage+Active+Count&depth=8&correlated=true&file=service/cs/service/parserServiceAverageActiveCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/services/tidsWriterService%2FAverage+Queue+Length&depth=8&correlated=true&file=service/cs/service/term2IdWriterServiceQueueLength
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/services/tidsWriterService%2FAverage+Active+Count&depth=8&correlated=true&file=service/cs/service/term2IdWriterServiceAverageActiveCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/services/otherWriterService%2FAverage+Queue+Length&depth=8&correlated=true&file=service/cs/service/otherWriterServiceQueueLength
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/services/otherWriterService%2FAverage+Active+Count&depth=8&correlated=true&file=service/cs/service/otherWriterServiceAverageActiveCount
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/services/deleteService%2FAverage+Queue+Length&depth=8&correlated=true&file=service/cs/service/deleteServiceAverageQueueLength

# The workflow latch counters (indicate #of documents in a given workflow state).
# The 'document' latch is the #of documents that are in process in any of the 
# workflow states.
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/workflowLatch/(document)&depth=8&correlated=true&file=service/cs/workflowLatch/document
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/workflowLatch/(parser)&depth=8&correlated=true&file=service/cs/workflowLatch/parser
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/workflowLatch/(bufferTerm2Id)&depth=8&correlated=true&file=service/cs/workflowLatch/bufferTerm2Id
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/workflowLatch/(bufferOther)&depth=8&correlated=true&file=service/cs/workflowLatch/bufferOther

# Latches used to guard against premature close of the workflow states.
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/bufferGuard/(guardTerm2Id)&depth=8&correlated=true&file=service/cs/bufferGuard/guardTerm2Id
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/bufferGuard/(guardOther)&depth=8&correlated=true&file=service/cs/bufferGuard/guardOther
http://localhost:9999/?regex=/([^/]*)/.*/(.*)/bufferGuard/(guardNotify)&depth=8&correlated=true&file=service/cs/bufferGuard/guardNotify
